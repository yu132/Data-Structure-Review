package important;

public class NOTE {
	/**
	 * 
	 * 1. 不要使用(x,y)->x-y 这种比较器，会溢出
	 * 
	 * 2. 位运算符的优先级低于加号和减号，如果要使用>>1 <<1来代替/2 *2的话，应注意加上括号
	 * 		而且负数的x>>1 并不是x/2，而是(x-1)/2请注意!!!
	 * 
	 * 3. 如果要把正数或者负数转换成某一种的话，应该把正数转化成负数，因为负数的范围大，不会
	 * 		出现转换后溢出的情况  -Integer.MIN_VALUE=Integer.MIN_VALUE 因为溢出
	 * 
	 * 4. 折半查找的mid不要使用(x+y)/2h或(x+y)>>1来求，因为x+y会溢出 
	 * 		如果是数组的下标，范围是正数，那么可以使用(x+y)>>>1来求，这样会把溢出的那一位移回来
	 * 		如果范围不是非负的，就不可以使用这种方法，而应该老老实实的用x+(y-x)/2来求(必须y>x)
	 * 		或者使用位运算式(a & b) + ((a ^ b) >> 1)来求(没有a和b的关系限制)
	 * 
	 * 5. 整数除法： ((x^y)<0?-1:0)Math.abs(x)/Math.abs(y)
	 * 		整数求模的余数和被除数的符号相同
	 */
}
